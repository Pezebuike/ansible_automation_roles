---
- name: Create alertmanager group
  group:
    name: "{{ alertmanager_group }}"
    state: present
    system: true
  become: true
  when: alertmanager_create_user | bool

- name: Create alertmanager user
  user:
    name: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    home: /var/lib/alertmanager
    shell: /bin/false
    system: true
    create_home: false
    state: present
  become: true
  when: alertmanager_create_user | bool

- name: Create alertmanager configuration directory
  file:
    path: "{{ alertmanager_config_dir }}"
    state: directory
    owner: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    mode: '0755'
  become: true

- name: Create alertmanager templates directory
  file:
    path: "{{ alertmanager_templates_dir }}"
    state: directory
    owner: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    mode: '0755'
  become: true

- name: Deploy alertmanager configuration
  template:
    src: alertmanager.yml.j2
    dest: "{{ alertmanager_config_dir }}/alertmanager.yml"
    owner: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    mode: '0644'
    backup: true
  become: true
  notify:
    - restart alertmanager
    - reload alertmanager

- name: Deploy basic notification template (optional)
  copy:
    content: |
      {{ "{{" }} define "slack.text" {{ "}}" }}
      {{ "{{" }} range .Alerts {{ "}}" }}*Alert:* {{ "{{" }} .Annotations.summary {{ "}}" }}
      *Instance:* {{ "{{" }} .Labels.instance {{ "}}" }}{{ "{{" }} end {{ "}}" }}
      {{ "{{" }} end {{ "}}" }}
    dest: "{{ alertmanager_templates_dir }}/default.tmpl"
    owner: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    mode: '0644'
  become: true
  when: alertmanager_deploy_templates | default(false) | bool
  notify:
    - restart alertmanager

- name: Check if amtool exists
  stat:
    path: "{{ alertmanager_binary_path }}/amtool"
  register: amtool_exists
  become: true
  when: alertmanager_validate_config | default(false) | bool

- name: Find amtool in common locations (if validation enabled but tool not found)
  find:
    paths:
      - /usr/bin
      - /usr/local/bin
      - /opt/alertmanager
      - /opt/alertmanager/bin
    patterns: 'amtool'
  register: amtool_search
  become: true
  when:
    - alertmanager_validate_config | default(false) | bool
    - not (amtool_exists.stat.exists | default(false))

- name: Display amtool locations found
  debug:
    msg: "Found amtool at: {{ item.path }}"
  loop: "{{ amtool_search.files | default([]) }}"
  when:
    - alertmanager_validate_config | default(false) | bool
    - amtool_search.files is defined
    - amtool_search.files | length > 0

- name: Validate alertmanager configuration
  command: >
    "{{ alertmanager_binary_path }}/amtool" config show
    --config.file="{{ alertmanager_config_dir }}/alertmanager.yml"
  become: true
  become_user: "{{ alertmanager_user }}"
  register: alertmanager_config_check
  failed_when: alertmanager_config_check.rc != 0
  changed_when: false
  when: 
    - alertmanager_validate_config | default(false) | bool
    - amtool_exists.stat.exists | default(false)

- name: Ensure alertmanager service is started and enabled
  systemd:
    name: "{{ alertmanager_service_name }}"
    state: started
    enabled: true
    daemon_reload: true
  become: true